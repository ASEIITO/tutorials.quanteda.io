---
title: Wordscores
weight: 10
draft: false
---

```{r message=FALSE}
require(quanteda)
require(quanteda.corpora)
require(ggplot2)
```


{{% notice note %}}
Wordscores is a scaling model for estimating the positions (mostly of political actors) for dimensions that are specified a priori. Wordscores was introduced in Laver, Benoit and Garry (2003) and is widely used among political scientists.

To score the documents (they need to be converted to a `dfm` first), you need to specify so called reference texts in your text corpus. These texts require reference scores that are stored in a Scoring Variable. Afterwards, Wordscores estimates the positions for the remaining "virgin" texts.
{{% /notice %}}

We use texts of amicus curiae briefs labelled as being either pro-petitioner or pro-respondent in US Supreme court cases on affirmative action to exemplify Wordscores. 

```{r}
refs <- docvars(data_corpus_amicus, "trainclass")
print(refs)
```

We see that the first two documents are labelled as _P_ (petitioner), the third and fourth documents are labelled as _R_ (respondent).

The `docvar` contains the class of the remaining 96 documents.

Next, we transform the reference scores to a numeric variable that takes the value -1 for the petitioners and +1 for the respondents.

```{r}
refs <- (as.numeric(refs) - 1.5) * 2
```

Now we can apply the Wordscores algorithm to the document-feature matrix.

```{r}
dfm_amicus <- dfm(data_corpus_amicus)

ws_amicus <- textmodel_wordscores(dfm_amicus, y = refs)
```

Next, we predict the Wordscores for the unknown virgin texts.

```{r}
ws_preds <- predict(ws_amicus, newdata = dfm_amicus)
summary(ws_preds)
```

Finally, we can plot the distribution of the Wordscores for the virgin texts with **ggplot2**. 

```{r}
# create data frame
preds_data <- data.frame(
  predictions = ws_preds,
  document_class = docvars(dfm_amicus, "testclass")
)

# remove training texts
preds_data <- subset(preds_data, !is.na(document_class))

ggplot(preds_data, aes(x = document_class, y = predictions)) +
  geom_boxplot() +
  coord_flip() + 
  labs(x = "Test class", y = "Predicted document class") + 
  theme_minimal()
```
